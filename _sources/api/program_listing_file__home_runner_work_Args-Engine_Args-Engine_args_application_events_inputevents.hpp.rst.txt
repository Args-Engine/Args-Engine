
.. _program_listing_file__home_runner_work_Args-Engine_Args-Engine_args_application_events_inputevents.hpp:

Program Listing for File inputevents.hpp
========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Args-Engine_Args-Engine_args_application_events_inputevents.hpp>` (``/home/runner/work/Args-Engine/Args-Engine/args/application/events/inputevents.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <core/core.hpp>
   #include <application/input/inputmap.hpp>
   
   
   namespace args::application
   {
       template <class T>
       struct input_action : public events::event<T>
       {
   
           void set(bool v, inputmap::modifier_keys m, inputmap::method id)
           {
               value = v;
               mods = m;
               identifier = id;
           }
   
           float input_delta;
           bool value{};
           inputmap::modifier_keys mods{};
           inputmap::method identifier{};
   
           virtual bool unique() override { return false; }
   
           A_NODISCARD bool pressed()  const { return value == true;  }
           A_NODISCARD bool released() const { return value == false; }
       };
   
       template <class T>
       struct input_axis : public events::event<T>
       {
           void set(float v,inputmap::modifier_keys m,inputmap::method id)
           {
               value = v;
               mods = m;
               identifier = id;
           }
   
           float input_delta;
           float value{};
           inputmap::modifier_keys mods{};
           inputmap::method identifier{};
   
           virtual bool unique() override { return false; }
       };
   
   }
