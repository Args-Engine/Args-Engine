
.. _program_listing_file__home_runner_work_Legion-Engine_Legion-Engine_legion_engine_core_scenemanagement_scenemanager.hpp:

Program Listing for File scenemanager.hpp
=========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine_Legion-Engine_legion_engine_core_scenemanagement_scenemanager.hpp>` (``/home/runner/work/Legion-Engine/Legion-Engine/legion/engine/core/scenemanagement/scenemanager.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   #include <core/engine/system.hpp>
   #include <core/ecs/component_handle.hpp>
   
   namespace legion::core::scenemanagement
   {
       struct scene;
   
       class SceneManager final : public core::System<SceneManager>
       {
       public:
           int sceneCount;
           static std::unordered_map < id_type, std::string> sceneNames;
           static std::unordered_map < id_type, ecs::component_handle <scene > > sceneList;
   
           SceneManager() = default;
   
           virtual void setup()
           {
   
           }
   
           void update()
           {
   
           }
   
           static bool createScene(const std::string& name);
   
           static bool createScene(const std::string& name, ecs::entity_handle& ent);
   
           static bool loadScene(const std::string& name);
   
   
           static ecs::component_handle<scene> getScene(std::string name);
   
           static ecs::entity_handle getSceneEntity(std::string name);
   
   
   
           void saveScene()
           {
   
           }
       };
   }
