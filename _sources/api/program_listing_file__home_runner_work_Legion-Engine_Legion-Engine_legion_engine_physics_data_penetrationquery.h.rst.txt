
.. _program_listing_file__home_runner_work_Legion-Engine_Legion-Engine_legion_engine_physics_data_penetrationquery.h:

Program Listing for File penetrationquery.h
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine_Legion-Engine_legion_engine_physics_data_penetrationquery.h>` (``/home/runner/work/Legion-Engine/Legion-Engine/legion/engine/physics/data/penetrationquery.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <core/core.hpp>
   #include <physics/data/physics_manifold.hpp>
   
   namespace legion::physics
   {
       //After a collision is found, stores the necessary information to create contact points
       class PenetrationQuery
       {
       public:
   
           math::vec3 faceCentroid,normal;
           float penetration = 0.0f;
           bool isARef;
   
           PenetrationQuery(math::vec3& pFaceCentroid,math::vec3& pNormal,float pPenetration,bool pIsARef) :
               faceCentroid(pFaceCentroid),normal(pNormal),penetration(pPenetration),isARef(pIsARef)
           {
   
           }
   
           virtual void populateContactList
           (physics_manifold& manifold,math::mat4& refTransform,math::mat4 incTransform)
           {
   
           }
       };
   
   }
   
