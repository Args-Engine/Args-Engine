
.. _program_listing_file__home_runner_work_Legion-Engine_Legion-Engine_legion_engine_physics_systems_physicssystem.cpp:

Program Listing for File physicssystem.cpp
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file__home_runner_work_Legion-Engine_Legion-Engine_legion_engine_physics_systems_physicssystem.cpp>` (``/home/runner/work/Legion-Engine/Legion-Engine/legion/engine/physics/systems/physicssystem.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #include <physics/systems/physicssystem.hpp>
   
   
   namespace legion::physics
   {
       std::unique_ptr<BroadPhaseCollisionAlgorithm> PhysicsSystem::m_broadPhase = nullptr;
   
       bool PhysicsSystem::IsPaused = false;
       bool PhysicsSystem::oneTimeRunActive = false;
   
   
       void PhysicsSystem::setup()
       {
           createProcess<&PhysicsSystem::fixedUpdate>("Physics", m_timeStep);
   
           manifoldPrecursorQuery = createQuery<position, rotation, scale, physicsComponent>();
   
           //std::make_unique<BroadphaseUniformGrid>(math::vec3(2,2,2));
           //std::make_unique<BroadphaseBruteforce>();
   
           m_broadPhase = std::make_unique<BroadphaseBruteforce>();
   
       }
   }
