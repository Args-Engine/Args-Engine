#version 450
#state CULL OFF
#state DEPTH OFF

generate(vertex, fragment)

#include <stdio.shinc>
#include <math_ext.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position =  vec4(stdin(position), 1.0);
        PropagateStdIO();
    }
}


shader(fragment)
{

    uniform sampler2D overdrawHistory;

    void main(void)
    {
        vec4 current = HDROverdraw(stdin(uv));
        vec4 history = texture(overdrawHistory, stdin(uv));
        fragment_color = vec4(0.0);
        fragment_overdraw = vec4(mix(history.rgb, current.rgb, clamp(length(history) - length(current), 0.99, 1.0)), 1.0);
        fragment_normal = vec4(0.0);
        fragment_position = vec4(0.0);
    }
}

