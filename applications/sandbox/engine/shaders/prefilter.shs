#version 450
#state CULL OFF
#state DEPTH OFF

generate(vertex, fragment)

#include<stdio.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(stdin(position), 1.0);
        PropagateStdIO();
    }
}

shader(fragment)
{
    uniform vec2 scale;
    uniform sampler2D aofTexture;
    void main(void)
    {
        const vec2 texelSize = 1.0 / textureSize(lgn_sceneColor, 0);
        vec4 o = texelSize.xyxy * vec2(-0.5, 0.5).xxyy;
        float coc0 = texture(aofTexture, stdin(uv)/scale + o.xy).r;
        float coc1 = texture(aofTexture, stdin(uv)/scale + o.zy).r;
        float coc2 = texture(aofTexture, stdin(uv)/scale + o.xw).r;
        float coc3 = texture(aofTexture, stdin(uv)/scale + o.zw).r;
        
        float cocMin = min(min(min(coc0, coc1), coc2), coc3);
        float cocMax = max(max(max(coc0, coc1), coc2), coc3);
        float coc = cocMax >= -cocMin ? cocMax : cocMin;

        fragment_color = vec4(SceneColor(stdin(uv)).rgb, coc);
    }
}
