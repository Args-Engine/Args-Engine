#version 450
#state DEPTH OFF

generate(vertex, fragment)

#include<stdio.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = ModelToScreenSpacePosition(position);
        PropagateStdIO();
    }
}

shader(fragment)
{
    void main(void)
    {
        //float frustumDepth = FrustumDepth();
        float sceneDepth = SceneDepth().r;
        vec3 viewSpacePos = (ViewMatrix * vec4(GetWorldPosition(), 1.0)).xyz;
        vec3 viewRay = viewSpacePos * (FarZ / viewSpacePos.z);
        vec3 viewSpaceScenePos = viewRay * sceneDepth;
        vec3 worldScenePos = (inverse(ViewMatrix) * vec4(viewSpaceScenePos, 1.0)).xyz;

        vec3 localScenePos = (inverse(stdin(modelMatrix)) * vec4(worldScenePos, 1.0)).xyz;
        //if(max(abs(localScenePos.x), max(abs(localScenePos.y), abs(localScenePos.z))) > 0.5)
          //  discard;

        //fragment_color = vec4(vec3(sceneDepth * FrustumDepth()*3.0), 1.0);
        //fragment_color = vec4(localScenePos, 1.0);
        fragment_color = vec4(worldScenePos, 1.0);
    }
}
