#version 450
#state CULL OFF

generate(vertex, fragment)

#include <stdio.shinc>
#include <math_ext.shinc>

shader(vertex)
{
    void main(void)
    {
        gl_Position = ModelToScreenSpacePosition(position);
        PropagateStdIO();
    }
}

shader(fragment)
{
    void main(void)
    {
        vec2 grid = mod(GetWorldPosition().xz, 1.0);
        vec2 invgrid = 1.0 - grid;
        grid = grid * grid;
        grid = grid * grid;
        invgrid = invgrid * invgrid;
        invgrid = invgrid * invgrid;
        grid = clamp01(grid + invgrid);

        if(max(grid.x, grid.y) < 0.9)
            discard;

        float alpha = mix(1, 0, clamp01(length(stdio(position))/250.0));
        if(alpha <= 0.0)
            discard;

        fragment_color = vec4(vec3(0.3), alpha);
    }
}
