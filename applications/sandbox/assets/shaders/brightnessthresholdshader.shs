#version 450
#state CULL OFF
#state DEPTH OFF
generate(vertex, fragment)

#state ALPHA OFF

#include <color_correction.shinc>
#include <stdio.shinc>


shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(stdin(position), 1.0);
        PropagateStdIO();
    }
}


shader(fragment)
{
    out vec4 BrightColor : SV_HDROVERDRAWOUT;


    void main(void)
    {
        //getting color from texture
        vec3 col = vec3(SceneColor(stdin(uv)));
        fragment_color = vec4(col, 1.0);

        //check if fragment output is higher than threshold. If it is, set it as brightness color output.
        float brightness = max(col.r,max(col.g,col.b));//Luminance(col);
        if(brightness >= 1.0)
            BrightColor = vec4(clamp01(col.rgb-vec3(1)), 1.0);
        else
            BrightColor = vec4(0.0, 0.0, 0.0, 0.0);

    }
}

