#version 450
#state CULL OFF
#state DEPTH OFF
#state ALPHA OFF

generate(vertex, fragment)

#include <color_correction.shinc>
#include <stdio.shinc>


shader(vertex)
{
    void main(void)
    {
        gl_Position = vec4(stdin(position), 1.0);
        PropagateStdIO();
    }
}


shader(fragment)
{
    void main(void)
    {
        //getting color from texture
        vec3 col = vec3(SceneColor(stdin(uv)));
        fragment_color = vec4(clamp01(col), 1.0);

        //check if fragment output is higher than threshold. If it is, set it as brightness color output.
        float brightness = max(col.r, max(col.g, col.b));
        if(brightness >= 1.0)
            fragment_overdraw = vec4(min(col.rgb - vec3(1.0), vec3(0.0)) + HDROverdraw(stdin(uv)).rgb, 1.0);
        else
            fragment_overdraw = vec4(0.0, 0.0, 0.0, 0.0);

    }
}

