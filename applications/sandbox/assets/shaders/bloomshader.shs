#version 450

generate(vertex, fragment)

#include <stdio.shinc>


shader(vertex)
{

    layout (location = 0) in vec2 aPos;
    layout (location = 1) in vec2 aTexCoords;

    out vec2 TexCoords;
    void main(void)
    {
        TexCoords = aTexCoords;
        gl_Position = vec4(aPos.x, aPos.y, 1.0, 1.0);
    }
}


shader(fragment)
{
    layout (location = 0) out vec4 FragColor;
    layout (location = 1) out vec4 BrightColor;

    in vec2 TexCoords;

    uniform sampler2D screenTexture;


    void main(void)
    {
        //getting color from texture
        vec3 col = texture(screenTexture, TexCoords).rgb;
        FragColor = vec4(col, 1.0);

        //check if fragment output is higher than threshold. If it is, set it as brightness color output.
        float brightness = dot(FragColor.rgb, vec3(0.2126, 0.7152, 0.0722));
        if(brightness > 1.0)
            BrightColor = vec4(FragColor.rgb, 1.0);
        else
            BrightColor = vec4(0.0, 0.0, 0.0, 1.0);

    }
}

